Szekvenciák szemszögébõl nézve:
MOVE:
Colonel step: hív:colonel.field.exit //hogy tudjuk merre megyük, 
az exitnek és az enternek kéne Item ÉS DIRECTION PARAMÉTER (ugyanis nem illõ ezt megkérdezni coloneltõl)
exit: meghívja a megfelõ szomszédjára az enter(item, dir)-t
enter: nos a gondolatom az, hogy végigcollide-olunk az összes item-en... nyilván csak akkor ülhet le colonel a helyre, ha egyik item se akadály...
egy ötlet visszatérési érték nélkül: legyen colonelnel egy BLOCKED:BOOL-ja (ami a step() elején false)... 
ha valamely item nem engedi, hogy rá kerüljön colonel, akkkor egy SETBLOCKED(BOOL)-lal true-ra állítja, 
így ha pl. a helyen van doboz, zárt ajtó, vagy fal, a colonel az összes collide végén blokkolva lesz...
collide-ok után, meghívunk egy COLONEL.RELOCKATE(THIS:FIELD)-t a fieldben... ez a függvény get nélkül tudni fogja, hogy a colonel blokkolva van-e, és ha a colonel szabad, 
akkor az eredeti fieldjérõl törli magát (ehhez, kell a field-en egy REMOVE(ITEM)), és hozzáadja magát az újhoz (ADD(ITEM)), 
majd frissíti a helyét (mellesleg blokkolja is magát portál okokból)

Ha portállal találkozik: nem számít, hogy a portál blokkol-e, mert úgyis kell, hogy legyen a field-en fal, ami blokkol... 
viszont problémát jelent az irány ismeretének hiánya... 
megoldás lehet, hogyha a collide-nak általánban van item, mellet DIRECTION PARAMÉTERe...
ezzel a portál el tudja dönteni, hogy a colonel átmehet-e rajta...
ezután kéne a wormhole-on hívni egy átutazást... TRANSPORT(ITEM/COLONEL, BOOL), ezzel a wormhole tudná, hogy melyik kapunak kell átandni az Item-et...
sajnos, hogy a másik portálon kijönnön, kéne annak egy EXIT(ITEM) ami a field-jén Exit(Item, Dir)-t hív, és így folytathatja a colonel az útját.

Probléma: mérleg... ha a mérlegrõl lelépünk, azt valahogy deaktiválni kell... a field REMOVE(ITEM/COLONEL)-je megfelelõ pillanat deaktiválni, 
viszont el kéne érni a release-t... 
pillanatnyilag nem jut jobb eszembe, mint az itemnek is adni ilyen függvényt üresen, hogy meghívható legyen...
a press-szel gyakorlatban talán nincs ilyen gond (colonel ha collide-ol a mérleggel, vagy rálép, vagy már van rajta doboz, így onnan nyugodtan meghívhatjuk a press()-t)


Utógondolat... a shoot és a pickup-ok valószínûleg szintén igényelnének új függvényeket... ha valaki leírná ilyen gondolatmenetben, 
az (szerintem) hasznos lehetne... ha valaki már megcsinálta a MOVE szekvenciáját, akkor annak örülök nyilván, ez egy módszer akart lenni, 
ami elviekben teljesíti az elõírt követelményeket, és a class-ba csak néhány új függvényt igényel (meg egy BOOL változót).